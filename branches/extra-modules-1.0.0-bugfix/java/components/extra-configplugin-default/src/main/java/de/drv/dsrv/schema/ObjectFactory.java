/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.5-11/13/2008 12:46 PM(foreman)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.06.21 at 10:47:04 AM CEST 
//
package de.drv.dsrv.schema;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

/**
 * This object contains factory methods for each Java content interface and Java
 * element interface generated in the de.drv.dsrv.schema package.
 * <p>
 * An ObjectFactory allows you to programatically construct new instances of the
 * Java representation for XML content. The Java representation of XML content
 * can consist of schema derived interfaces and classes representing the binding
 * of schema type definitions, element declarations and model groups. Factory
 * methods for each of these are provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

	private final static QName _Profilkonfiguration_QNAME = new QName("",
			"Profilkonfiguration");
	private final static QName _Elternelement_QNAME = new QName("",
			"Elternelement");
	private final static QName _Element_QNAME = new QName("", "element");
	private final static QName _Name_QNAME = new QName("", "Name");

	/**
	 * Create a new ObjectFactory that can be used to create new instances of
	 * schema derived classes for package: de.drv.dsrv.schema
	 * 
	 */
	public ObjectFactory() {
	}

	/**
	 * Create an instance of {@link ProfilkonfigurationType }
	 * 
	 */
	public ProfilkonfigurationType createProfilkonfigurationType() {
		return new ProfilkonfigurationType();
	}

	/**
	 * Create an instance of {@link ElementType }
	 * 
	 */
	public ElementType createElementType() {
		return new ElementType();
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}
	 * {@link ProfilkonfigurationType }{@code >}
	 * 
	 */
	@XmlElementDecl(namespace = "", name = "Profilkonfiguration")
	public JAXBElement<ProfilkonfigurationType> createProfilkonfiguration(
			ProfilkonfigurationType value) {
		return new JAXBElement<ProfilkonfigurationType>(
				_Profilkonfiguration_QNAME, ProfilkonfigurationType.class,
				null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}
	 * 
	 */
	@XmlElementDecl(namespace = "", name = "Elternelement")
	public JAXBElement<String> createElternelement(String value) {
		return new JAXBElement<String>(_Elternelement_QNAME, String.class,
				null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link ElementType }
	 * {@code >}
	 * 
	 */
	@XmlElementDecl(namespace = "", name = "element")
	public JAXBElement<ElementType> createElement(ElementType value) {
		return new JAXBElement<ElementType>(_Element_QNAME, ElementType.class,
				null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}
	 * 
	 */
	@XmlElementDecl(namespace = "", name = "Name")
	public JAXBElement<String> createName(String value) {
		return new JAXBElement<String>(_Name_QNAME, String.class, null, value);
	}

}
