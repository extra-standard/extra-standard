#summary eXTra Client Webservice mit Attachments (MTOM).

= Einführung =

Derzeit ist eXTra nicht dafür gedacht, dass große Dateien auch versendet und empfangen werden können, da die Dateien als Daten innerhalb der XML-Datei eingefügt werden.

Problembeschreibung und Infos: https://code.google.com/p/extra-standard/issues/detail?id=76

= MTOM Umstellung Hintergrunde und schrittweise Einführung = 

MTOM (SOAP Message Transmission Optimization Mechanism) ist ein Standard, der erlaubt die binären Daten effizient und komfortabel zu übertragen.

Wenn die binären Daten als Teil eines XML-Dokuments eingefügt sind, müssen sie Base64 kodiert sein, welches CPU-Zeit und Größe des Nutzlast erhöhen wird. 

Wenn MTOM auf einem Service aktiviert ist, nimmt dieser Mechanismus binären Daten, die Teil eines XML-Dokuments sind, und bildet ein Attachment für die diese Daten.

== Schritte für die Umstellung ==


Um MTOM zu aktivieren, müssen mehrere Schritte durchgeführt werden:

 * Zunächst muss ein bestimmtes Feld im XML-Schema annotiert werden, damit JAXB weiß, dass dieses Feld ein Kandidat für MTOM-Optimierung ist. 
 * Danach muss über CXF (Apache Webservice Framework) die Konfiguration für MTOM aktiviert werden.
 
== Schema Annotieren ==

Vorher

{{{
    <xs:complexType name="Base64CharSequenceType">
        <xs:simpleContent>
            <xs:extension base="xs:base64Binary"/>
        </xs:simpleContent>
    </xs:complexType>
}}}


Nachher

{{{
    <xs:complexType name="Base64CharSequenceType">
        <xs:simpleContent>
            <xs:extension base="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream"/>
        </xs:simpleContent>
    </xs:complexType>
}}}

Dies informiert JAXB (JAXB nutzt WSDL2Java, um Klassen zu erzeugen), dass dieses Feld alle mögliche Inhalte beinhalten kann.

Daraufhin wird statt eines Byte-Array für den !Base64Binary Element ein !DataHandler (siehe http://docs.oracle.com/javaee/1.4/api/javax/activation/DataHandler.html) erstellt, um den Datenstrom (Stream) übertragen zu können.



== Client konfigurieren  ==

Die Konfigurations des Clients findet über folgende JAXWS XML Konfiguration statt:

{{{
	<jaxws:client id="extraClientMTOMWS" serviceClass="de.extra_standard.namespace.webservice.Extra" address="${webservice.endpoint.url}">
		<jaxws:properties>
			<entry key="mtom-enabled" value="false" />
		</jaxws:properties>    
	</jaxws:client>     
}}}


== !DataHandler verwenden == 

!DataHandlers sind einfach zu bedienen und zu erstellen. !DataHandler kann - wie unten beschrieben - konsumiert werden:
{{{
	final DataHandler dataHandler = base64CharSequence.getValue();
	final InputStream inputStream = dataHandler.getInputStream();
}}}

Es gibt viele Möglichkeiten, einen !DataHandler zu erstellen. Es kann !FileDataSource, !ByteArrayDataSource vewendet werden. Ansonsten kann !DataSource auch für bestimmte Zwecke implementiert werden.
{{{
	File inputFile = new File ("Pfad zum File");
	final DataSource source = new FileDataSource(inputFile);
}}}