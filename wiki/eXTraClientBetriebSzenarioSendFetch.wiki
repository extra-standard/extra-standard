#summary Technisches Referenzverfahren, das exemplarisch die Arbeit mit dem eXTra-Client verdeutlicht

<h1>eXTRa Szenario Send-Fetch (Sende-Hole Betrieb)</h1>

Das Szenario Send-Fetch ist ein technisches Referenzverfahren, das exemplarisch die Arbeit mit dem eXTra-Client verdeutlichen soll. Dieses Szenario kann als Ausgangspunkt für die Realisierung von Fachverfahren verwendet werden. Für die Ausführung wird eine Version des eXTra Clients benoetigt.  

Im folgenden wird beschrieben, wie das Szenario Send-Fetch auf einem Windows-Rechner eingerichtet werden kann (Anpassung an andere Betriebssysteme (z.B. Linux) mit überschaubarem Aufwand möglich). Folgende Schritte müssen durchgeführt werden:

<wiki:toc max_depth="2" />

== Auslieferungsarchive auspacken ==

Im ersten Schritt müssen die beiden Auslieferungsarchive (extra-cli-1.0.0-M1.zip, extra-scenario-sendfetch-1.0.0-M1.zip) ausgepackt werden:

|| *Schritt* || *Datei/Ordner* || *Aktion* ||
|| 1 || D:\eXTra  || Verzeichnis anlegen ||
|| 2 || D:\eXTra\fachverfahren || Verzeichnis anlegen ||
|| 3 || extra-cli-1.0.0-M1.zip || Auspacken in: D:\eXTra ||
|| 4 || extra-scenario-sendfetch-1.0.0-M1.zip || Auspacken in: D:\eXTra\fachverfahren ||

Folgende Struktur ergibt sich:

{{{
D:\eXTra
- extra-client
  - bin
  - lib
  - sql
- fachverfahren
  - extra-scenario-sendfetch
    - bin
    - conf
      - phase1
      - phase2
      - phase3
    - docs
    - logs
    - sql
    - work
      - input
      - reports
      - responses
}}}

=== Verzeichnisbeschreibung ===

Im folgenden werden die Verzeichnisse des Verfahrens Send-Fetch beschrieben (unter fachverfahren/extra-scenario-sendfetch):
|| *Verzeichnis* || *Beschreibung* ||
|| /bin || Hier befinden sich ausführbare Batch-Dateien (Windows) für die Phasen 1 bis 3 (phase1.bat, phase2.bat, phase3.bat). ||
|| /conf || Die Konfigurationsdateien sind für jede Phase in einem eigenen Verzeichnis abgelegt (/conf/phase1, /conf/phase2, /conf/phase3). ||
|| /docs || Exemplarisch sind hier für jede Phase die XML-Kommunikationsdokumente abgelegt. ||
|| /logs || Ausgabeort für Logdateien die während der Programmausführung erzeugt werden. ||
|| /sql || Datenbankskripte, mit denen die Initial-Datenbankbefüllung für das Szenario Send-Fetch erzeugt wird. ||
|| /work/input || In diesem Verzeichnis werden Eingabedateien erwartet. ||
|| /work/reports || Ausgabeverzeichnis für Reports. ||
|| /work/responses || Ergebnisdateien werden hier abgelegt. ||

== Datenbank anlegen ==
Im ersten Schritt muss die eXTra-Client Datenbank angelegt werden. Aktuell wird nur Oracle unterstützt. In den Konfigurationsdateien wird eine lokale Oracle Datenbank mit _Username/Passwort = extracli_ erwartet (anpassbar).
Mit folgenden SQL-Skripten wird diese Datenbank initial aufgebaut und befüllt:

|| *Skript* || *Beschreibung* ||
|| extra-client \ sql \ V1__1_0_0_createInitialDatabase.sql || Initiale Datenbankerzeugung (Tabellen)||
|| extra-client \ sql \ V2__1_0_0_createInitialData.sql || Initiale Datenbefüllung ||
|| extra-scenario-sendfetch \ sql \ V3__1_0_0_createInitialData.sql || Initiale Datenbefüllung für das Szenario Send-Fetch ||

Die Skripte können mit einem DB-Administrierungswerkzeug oder mit Flyway (http://code.google.com/p/flyway/) ausgeführt werden.

== Datenbankverbindung eintragen ==

Für jede Phase muss die Datenbankverbindung in der Datei _conf/phase.../extra-properties-user.properties_ eingestellt werden. Es müssen die JDBC Verbindungsparameter eingetragen werden. Voreingestellt ist eine lokale Oracle Express Datenbank:

{{{
plugins.execution.executionPersistenceJpa.hibernate.generateDdl=false
plugins.execution.executionPersistenceJpa.hibernate.database=ORACLE
plugins.execution.executionPersistenceJpa.database.driver_class=oracle.jdbc.OracleDriver
plugins.execution.executionPersistenceJpa.database.connect_url=jdbc:oracle:thin:@localhost:1521:xe
plugins.execution.executionPersistenceJpa.database.username=extracli
plugins.execution.executionPersistenceJpa.database.password=extracli
}}}

Zusätzlich muss im Verzeichnis _extra-client/lib_ der Oracle JDBC Treiber (z.B. ojdbc14-10.2.0.4.0.jar) abgelegt werden (dieser Treiber befindet sich nicht in der Auslieferung). 

== Szenario durchführen ==

Im Verzeichnis 'extra-scenario-sendfetch/bin' befindet sich für jede Phase eine ausführbare Batchdatei. Im Verzeichnis 'logs' wird für jede Ausführung ein Ausführungsprotokoll erzeugt.

=== Anpassungen ===

Für jede Phase des Szenario-Send-Fetch gibt es ein eigenes Konfigurationsverzeichnis in dem Anpassungen vorgenommen werden können. In jedem dieser Konfigurationsverzeichnis (conf/phase1, ...) befinden sich diese Dateien:

|| *Datei* || *Beschreibung* ||
|| extra-properties-basic.properties || Allgemeine Konfigurationseinstellungen ||
|| extra-properties-user.properties || Spezifische Einstellungen (Datenbankverbindung, Eingabedateien, ...)||
|| logging-config.xml || Logging Konfiguration ||
|| phase...profil.xml || eXTra Profil-Datei ||