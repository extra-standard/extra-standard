/*C2*/SET SCHEMA PUBLIC
DISCONNECT
/*C3*/SET SCHEMA PUBLIC
ROLLBACK
create table EXECUTION (id bigint generated by default as identity (start with 1), end_time timestamp, error_code varchar(255), error_message varchar(255), parameters varchar(255), phase varchar(255), start_time timestamp, last_transition_id bigint, procedure_id bigint, primary key (id))
create table INPUT_DATA (id bigint generated by default as identity (start with 1), hashcode varchar(255), input_identifier varchar(255), request_id varchar(255), response_id varchar(255), return_code varchar(255), return_text varchar(255), execution_id bigint, next_phase_connection_id bigint, primary key (id))
create table MANDATOR (id bigint not null, name varchar(255) not null, primary key (id), unique (name))
create table PHASE_CONNECTION (id bigint not null, next_phase_qualifier varchar(255) not null, quelle_data_id bigint, status_id bigint, target_data_id bigint, primary key (id))
create table PROCEDURE (id bigint generated by default as identity (start with 1), name varchar(255) not null, short_key varchar(30) not null, mandator_id bigint, procedure_type_id bigint, primary key (id), unique (name), unique (short_key))
create table PROCEDURE_PHASE_CONFIGURATION (id bigint generated by default as identity (start with 1), phase varchar(255), next_phase_configuration_id bigint, procedure_type_id bigint, primary key (id))
create table PROCEDURE_TYPE (id bigint generated by default as identity (start with 1), end_phase varchar(255), name varchar(255), start_phase varchar(255), primary key (id))
create table PROCESS_TRANSITION (id bigint generated by default as identity (start with 1), duration bigint, transition_date timestamp, current_status_id bigint, execution_id bigint, prev_status_id bigint, primary key (id))
create table STATUS (id bigint not null, name varchar(255) not null, primary key (id), unique (name))
alter table EXECUTION add constraint FK65111AF844C1C618 foreign key (procedure_id) references PROCEDURE
alter table EXECUTION add constraint FK65111AF8B65AA2BE foreign key (last_transition_id) references PROCESS_TRANSITION
alter table INPUT_DATA add constraint FK714C7B1F7587B083 foreign key (next_phase_connection_id) references PHASE_CONNECTION
alter table INPUT_DATA add constraint FK714C7B1F9AB423F8 foreign key (execution_id) references EXECUTION
alter table PHASE_CONNECTION add constraint FKB384D8429D3D0F4 foreign key (target_data_id) references INPUT_DATA
alter table PHASE_CONNECTION add constraint FKB384D84288E8A4E7 foreign key (quelle_data_id) references INPUT_DATA
alter table PHASE_CONNECTION add constraint FKB384D842B40E23FC foreign key (status_id) references STATUS
alter table PROCEDURE add constraint FK64D092B3A55645BF foreign key (procedure_type_id) references PROCEDURE_TYPE
alter table PROCEDURE add constraint FK64D092B3ED3124BC foreign key (mandator_id) references MANDATOR
alter table PROCEDURE_PHASE_CONFIGURATION add constraint FK3EEB3D66A55645BF foreign key (procedure_type_id) references PROCEDURE_TYPE
alter table PROCEDURE_PHASE_CONFIGURATION add constraint FK3EEB3D669565A340 foreign key (next_phase_configuration_id) references PROCEDURE_PHASE_CONFIGURATION
alter table PROCESS_TRANSITION add constraint FKF4ECD451CCB18B6 foreign key (current_status_id) references STATUS
alter table PROCESS_TRANSITION add constraint FKF4ECD45D30DCF0 foreign key (prev_status_id) references STATUS
alter table PROCESS_TRANSITION add constraint FKF4ECD459AB423F8 foreign key (execution_id) references EXECUTION
create sequence seq_mandator_id
create sequence seq_phase_connection_id
INSERT INTO STATUS VALUES(1,'INITIAL')
INSERT INTO STATUS VALUES(2,'ENVELOPED')
INSERT INTO STATUS VALUES(3,'TRANSMITTED')
INSERT INTO STATUS VALUES(4,'RESULTS_EXPECTED')
INSERT INTO STATUS VALUES(5,'RESULTS_PROCESSED')
INSERT INTO STATUS VALUES(6,'RECEIPT_CONFIRMED')
INSERT INTO STATUS VALUES(8,'FAIL')
INSERT INTO STATUS VALUES(7,'DONE')
INSERT INTO MANDATOR VALUES(1,'TEST')
COMMIT
ALTER SEQUENCE PUBLIC.SEQ_MANDATOR_ID RESTART WITH 1
INSERT INTO PROCEDURE_TYPE VALUES(1,'PHASE3','SCENARIO_SEND_FETCH','PHASE1')
INSERT INTO PROCEDURE_PHASE_CONFIGURATION VALUES(1,'PHASE3',NULL,1)
INSERT INTO PROCEDURE_PHASE_CONFIGURATION VALUES(2,'PHASE2',1,1)
INSERT INTO PROCEDURE_PHASE_CONFIGURATION VALUES(3,'PHASE1',2,1)
INSERT INTO PROCEDURE VALUES(1,'Datenabgleich','SEND_FETH',1,1)
COMMIT
