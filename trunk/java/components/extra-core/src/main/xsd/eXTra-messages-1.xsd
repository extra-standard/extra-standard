<?xml version="1.0" encoding="UTF-8"?>
<!--
    Schema module describing eXTra standard messages
    
    @file    eXTra-messages-1.xsd
    @author  Michael SchÃ¤fer, Statistisches Bundesamt
    @version 1.1.0
    @state   FINAL
    @date    2009-10-30
    
    @changed 2009-10-30 1.1 MS + Added Attribute 'event' to AbstractArgumentType,
                               + Added version identifier '1.1'
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xmsg="http://www.extra-standard.de/namespace/message/1"
    xmlns="http://www.extra-standard.de/namespace/message/1"
    targetNamespace="http://www.extra-standard.de/namespace/message/1"
    attributeFormDefault="unqualified" elementFormDefault="qualified"
    version="1.1.0"
    >

    <!-- Abstract base types -->
    
    <!-- AbstractMessageType
        The abstract base type of any type that represents a message
        
        @changed 2009-10-30 1.1 MS + Added version identifier '1.1'
    -->
    <xs:complexType name="AbstractMessageType" abstract="true">
        <xs:attribute name="version" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="1.0"/>
                    <xs:enumeration value="1.1"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <!-- ConfirmationOfReceiptType
        Represents a message for confirming that data has been received succesfully
        @changed 2009-05-05 1.0 MS + Added element 'PropertySet'
    -->

    <xs:complexType name="ConfirmationOfReceiptType">
        <xs:complexContent>
            <xs:extension base="AbstractMessageType">
                <xs:sequence>
                    <xs:element name="Property" type="PropertyType" maxOccurs="unbounded"/>
                    <xs:element name="PropertySet" type="PropertySetType" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- DataRequestType
         Represents a message for requesting the result of some business
         process that was triggered by a previous message
    -->

    <xs:complexType name="DataRequestType">
        <xs:complexContent>
            <xs:extension base="AbstractMessageType">
                <xs:sequence>
                    <xs:element name="Query" type="QueryType"/>
                    <xs:element name="Control" type="ControlType" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <!-- QueryType
         Represents a query that selects requested objects by certain
         criteria specified by argument elements.
    -->
    <xs:complexType name="QueryType">
        <xs:sequence>
            <xs:element name="Argument" type="DataRequestArgumentType" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    
    <!-- AbstractArgumentType
        Defines an abstract base type for defining arguments of a query. An argument
        is bound to a named property by a property attribute which must be supplied
        by concrete types through extension. The name of the property takes the form
        of a URI. The property's type can be specified through a type attribute whose
        value references one of the XML Schema atomic types and defaults to xs:string.
        
        @changed 2009-10-30 1.1 MS + Added attribute 'event'
    -->
    <xs:complexType name="AbstractArgumentType">
        <xs:choice>
            <xs:element name="EQ" type="OperandType"/>
            <xs:element name="LE" type="OperandType"/>
            <xs:element name="LT" type="OperandType"/>
            <xs:sequence>
                <xs:choice>
                    <xs:element name="GE" type="OperandType"/>
                    <xs:element name="GT" type="OperandType"/>
                </xs:choice>
                <xs:choice minOccurs="0">
                    <xs:element name="LE" type="OperandType"/>
                    <xs:element name="LT" type="OperandType"/>
                </xs:choice>
            </xs:sequence>
        </xs:choice>
        <xs:attribute name="type" type="XSDPrefixedTypeCodes" default="xs:string"/>
        <xs:attribute name="event" type="EventNamesType" default="http://www.extra-standard.de/event/Default"/>
    </xs:complexType>
    
    <!-- DataRequestArgumentType
        Defines a concrete type for arguments of a data request query, restricting
        argument names to those enumerated in  xs:string
    -->
    <xs:complexType name="DataRequestArgumentType">
        <xs:complexContent>
            <xs:extension base="AbstractArgumentType">
                <xs:attribute name="property" type="DataRequestPropertyNamesType" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <!-- DataRequestPropertyNamesType
        The names of the properties that may appear in a data request query.
        The names must consitute a subset (in XSD terms: a restriction) of the
        names defined in the type PropertyNamesType.
    -->
    <xs:simpleType name="DataRequestPropertyNamesType">
        <xs:restriction base="PropertyNamesType">
            <xs:enumeration value="http://www.extra-standard.de/property/SenderID"/>
            <xs:enumeration value="http://www.extra-standard.de/property/ReceiverID"/>
            <xs:enumeration value="http://www.extra-standard.de/property/Procedure"/>
            <xs:enumeration value="http://www.extra-standard.de/property/DataType"/>
            <xs:enumeration value="http://www.extra-standard.de/property/ResponseID"/>
            <xs:enumeration value="http://www.extra-standard.de/property/ResponseCreationTimeStamp"/>
            <xs:enumeration value="http://www.extra-standard.de/property/ResponseFileName"/>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:complexType name="OperandType">
        <xs:simpleContent>
            <xs:extension base="xs:string"/>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="PropertyType">
        <xs:sequence>
            <xs:element name="Value" type="ValueType"/>
        </xs:sequence>
        <xs:attribute name="name" type="PropertyNamesType" use="required"/>
        <xs:attribute name="type" type="XSDPrefixedTypeCodes" default="xs:string"/>
    </xs:complexType>
    
    <!--
        @added 2009-05-05 1.0 MS 
    -->
    <xs:complexType name="PropertySetType">
        <xs:sequence>
            <xs:element name="Value" type="ValueType" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="name" type="PropertyNamesType" use="required"/>
        <xs:attribute name="type" type="XSDPrefixedTypeCodes" default="xs:string"/>
    </xs:complexType>
    
    <xs:simpleType name="PropertyNamesType">
        <xs:restriction base="xs:anyURI">
            <xs:enumeration value="http://www.extra-standard.de/property/SenderID"/>
            <xs:enumeration value="http://www.extra-standard.de/property/ReceiverID"/>
            <xs:enumeration value="http://www.extra-standard.de/property/Procedure"/>
            <xs:enumeration value="http://www.extra-standard.de/property/DataType"/>
            <xs:enumeration value="http://www.extra-standard.de/property/ResponseID"/>
            <xs:enumeration value="http://www.extra-standard.de/property/ResponseCreationTimeStamp"/>
            <xs:enumeration value="http://www.extra-standard.de/property/ResponseFileName"/>
        </xs:restriction>
    </xs:simpleType>

    <!--
        @added 2009-10-30 1.1 MS The set of predefined event names 
    -->
    <xs:simpleType name="EventNamesType">
        <xs:restriction base="xs:anyURI">
            <xs:enumeration value="http://www.extra-standard.de/event/Default"/>
            <xs:enumeration value="http://www.extra-standard.de/event/SendData"/>
            <xs:enumeration value="http://www.extra-standard.de/event/RequestData"/>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:complexType name="ValueType">
        <xs:simpleContent>
            <xs:extension base="xs:string"/> 
        </xs:simpleContent>
    </xs:complexType>
    
    <!-- 
         @removed 2009-07-17 MS Unused

    <xs:complexType name="AttributeType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="name" type="xs:NCName" use="required"/>
                <xs:attribute name="type" type="XSDPrefixedTypeCodes" default="xs:string"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    -->

    <!--
        @changed 2009-07-15 MS + Added element 'MaximumSize' 
    -->
    <xs:complexType name="ControlType">
        <xs:sequence>
            <xs:element name="MaximumPackages" type="xs:positiveInteger" minOccurs="0"/>
            <xs:element name="MaximumMessages" type="xs:positiveInteger" minOccurs="0"/>
            <xs:element name="MaximumSize" type="SpaceSizeType" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    
    <!--
        Defines a type for specifiying (disk or memory) space size. A size specification
        consists of an integer part immediately followed by a unit identifier. The integer
        part MUST evaluate to an value > 0. The unit is identified by one of the following
        letters: B (bytes), K (kilobytes), M (megabytes) and G (gigabytes).
        
        Examples: 4096B, 512K, 16M, 2G.
        
        @added 2009-07-15 MS 
    -->
    <xs:simpleType name="SpaceSizeType">
        <xs:restriction base="xs:string">
            <xs:pattern value="[0-9]*[1-9][0-9]*[BKMG]"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="XSDPrefixedTypeCodes">
        <xs:annotation>
            <xs:documentation>
                A list of prefixed XSD atomic type names
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:QName">

            <!-- Strings and names -->

            <xs:enumeration value="xs:string"/>
            <xs:enumeration value="xs:normalizedString"/>
            <xs:enumeration value="xs:token"/>
            <xs:enumeration value="xs:Name"/>
            <xs:enumeration value="xs:NCName"/>
            <xs:enumeration value="xs:QName"/>
            <xs:enumeration value="xs:language"/>

            <!-- Numeric -->

            <xs:enumeration value="xs:float"/>
            <xs:enumeration value="xs:double"/>
            <xs:enumeration value="xs:decimal"/>
            <xs:enumeration value="xs:integer"/>
            <xs:enumeration value="xs:long"/>
            <xs:enumeration value="xs:int"/>
            <xs:enumeration value="xs:short"/>
            <xs:enumeration value="xs:byte"/>
            <xs:enumeration value="xs:positiveInteger"/>
            <xs:enumeration value="xs:nonPositiveInteger"/>
            <xs:enumeration value="xs:negativeInteger"/>
            <xs:enumeration value="xs:nonNegativeInteger"/>
            <xs:enumeration value="xs:unsignedLong"/>
            <xs:enumeration value="xs:unsignedInt"/>
            <xs:enumeration value="xs:unsignedShort"/>
            <xs:enumeration value="xs:unsignedByte"/>

            <!-- Date and time -->

            <xs:enumeration value="xs:duration"/>
            <xs:enumeration value="xs:dateTime"/>
            <xs:enumeration value="xs:date"/>
            <xs:enumeration value="xs:time"/>
            <xs:enumeration value="xs:gYear"/>
            <xs:enumeration value="xs:gMonth"/>
            <xs:enumeration value="xs:gYearMonth"/>
            <xs:enumeration value="xs:gMonthDay"/>
            <xs:enumeration value="xs:gDay"/>

            <!-- legacy types -->

            <xs:enumeration value="xs:ID"/>
            <xs:enumeration value="xs:IDREF"/>
            <xs:enumeration value="xs:IDREFS"/>
            <xs:enumeration value="xs:ENTITY"/>
            <xs:enumeration value="xs:ENITIES"/>
            <xs:enumeration value="xs:NMTOKEN"/>
            <xs:enumeration value="xs:NMTOKENS"/>
            <xs:enumeration value="xs:NOTATION"/>

            <!-- Other -->

            <xs:enumeration value="xs:boolean"/>
            <xs:enumeration value="xs:hexBinary"/>
            <xs:enumeration value="xs:base64Binary"/>
            <xs:enumeration value="xs:anyURI"/>

            <!-- Undefined -->

            <xs:enumeration value="xmsg:UNDEFINED"/>

        </xs:restriction>
    </xs:simpleType>

    <!-- Messages -->

    <xs:element name="ConfirmationOfReceipt" type="ConfirmationOfReceiptType"/>
    <xs:element name="DataRequest" type="DataRequestType"/>

</xs:schema>
